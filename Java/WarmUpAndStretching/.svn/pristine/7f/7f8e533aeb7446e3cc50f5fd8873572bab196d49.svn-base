package priorityQueue;

import java.util.ArrayList;

/**
 * An implementation of the Priority Queue interface using an array list.
 * 
 * @author Matt Boutell and <<Yilun Wu>>>. Created Mar 29, 2014.
 * 
 * @param <T>
 *            Generic type of PQ elements
 */
public class ArrayListMinPQ<T extends Comparable<T>> {
	// Requirement: You must use this instance variable without changes.
	private ArrayList<T> items;

	public ArrayListMinPQ() {
		items = new ArrayList<T>();
	}

	public T findMin() {
		// This is also known as peekMin
		// DONE: implement
		if (this.isEmpty())
			return null;
		return this.items.get(0);
	}

	public T deleteMin() {
		// DONE: implement
		if (this.isEmpty())
			return null;
		return this.items.remove(0);
	}

	public void insert(T item) {
		// DONE: implement
		if (this.isEmpty()) {
			this.items.add(item);
			return;
		}
		int i = this.size() - 1;
		while ((i >= 0) && (item.compareTo(this.items.get(i)) < 0)) {
			i--;
		}
		i++;
		this.items.add(i, item);
	}

	public int size() {
		// DONE: implement
		return this.items.size();
	}

	public boolean isEmpty() {
		// DONE: implement
		return this.items.isEmpty();
	}

	public void clear() {
		// DONE: implement
		items.clear();
	}
}
